name: Release

on:
  push:
    branches:
      - 'release'

jobs:
  Release:
    if: ${{ !startsWith(github.event.head_commit.message, 'semantic-release-bot(release):') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3.3.0
        with:
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0
      - name: Import GPG Key
        uses: crazy-max/ghaction-import-gpg@v5.2.0
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
      - name: Setup JDK
        uses: actions/setup-java@v3.9.0
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version: '18.13'
      - name: Create Jar
        uses: gradle/gradle-build-action@v2.3.3
        with:
          arguments: fatJar
      - name: Publish Release To Github
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GIT_COMMITTER_NAME: Jahrim Gabriele Cesario
          GIT_COMMITTER_EMAIL: jahrim.cesario2@studio.unibo.it
          GIT_AUTHOR_NAME: Jahrim Gabriele Cesario
          GIT_AUTHOR_EMAIL: jahrim.cesario2@studio.unibo.it
        run: |
          npm install
          npx semantic-release
      - name: Publish Release To Maven
        uses: gradle/gradle-build-action@v2.3.3
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_PASSPHRASE }}
          ORG_GRADLE_PROJECT_mavenUsername: ${{ secrets.MAVEN_USERNAME }}
          ORG_GRADLE_PROJECT_mavenPassword: ${{ secrets.MAVEN_PASSWORD }}
        with:
          arguments: publish --no-parallel
